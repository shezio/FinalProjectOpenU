האוניברסיטה הפתוחה
המחלקה למתמטיקה ולמדעי המחשב - הנדסת תעשיה וניהול

פרטים אישיים:
שם הסטודנט: שלמה בונצל
טלפון: -
טלפון נייד: 0526112711	ת.ז. (9 ספרות):  302515010
כתובת: האלון 37 עץ אפרים
דוא"ל: shlezi0@gmail.com
שם הסטודנט: פאר בילוגורסקי
טלפון: -
טלפון נייד: 0506569993	ת.ז. (9 ספרות): 311121032
כתובת: מנחם בגין 34 בני ברק
דוא"ל: peer555b@gmail.com
שם הארגון בו נעשה הפרויקט:  עמותת חיוך של ילד	כתובת הארגון: רחוב זאב ז'בוטינסקי 9, בני ברק, 5126418
מגדלי הכשרת הישוב
שם המנחה: דיאנה סחן
טלפון:  
טלפון נייד:  
דוא"ל:  dianas@sce.ac.il	


פרטי הפרויקט     
כותרת נושא הפרויקט (עברית):
אפיון, ניתוח, עיצוב והקמת מערכת לניהול עמותת חיוך של ילד
כותרת נושא הפרויקט (אנגלית):
Analysis, Design and Implementation of a Management System for the 
'Smile of a Child' Non-Profit Organization
חתימות: 
  חתימת הסטודנט: שלמה בונצל
תאריך: 	  חתימת הסטודנט: פאר בילוגורסקי
תאריך: 
חתימת המנחה:
תאריך:	חתימת מרכז הקורס: 
תאריך:
דו"ח מספר:   2    

                                          
1.	תיאור הארגון
1.1.	רקע כללי – עמותת חיוך של ילד
עמותת חיוך של ילד (ע"ר 580802171) הוקמה בשנת 2020 בתור קרן "חיוך של ילד" תחת פלטפורמה בשם "מרכז הצדקה" לעמותות שאין להן עדיין סעיף 46 במטרה לתמוך וללוות משפחות של ילדים חולי סרטן ולהתמודד עם הקושי היומיומי.
ביום 28/10/2024 העמותה נרשמה לראשונה ברשם העמותות באופן רשמי.
העמותה עוסקת בתמיכה וליווי של ילדים חולי סרטן ומשפחותיהם ברמה שבועית וסיוע למשפחות נזקקות. 
ילדי העמותה בגילאים 0-16, מגיל 16 נחשב לבוגר בעמותה.
העמותה מחזיקה כ200 מתנדבים, המחולקים לתפקידים שונים.
העמותה מקיימת עבור המשפחות טיול בן 4 ימים לאילת אליה היא מסיעה 150 משתתפים שמתוכם 90 ילדים חולי סרטן ומשפחותיהם מגילאים 0-18 וכ20 בוגרים לאירוע ולמיאמי/אורלנדו למשך 10 ימים.
העמותה מקיימת בנוסף 2 אירועי שיא– אחד בחורף ואחד בקיץ - אירועים גדולים של 900  איש בשיתוף פעולה עם עמותות נוספות המתקיימים באולמות שהשימוש בהם ניתן בתרומה גם הוא.
מלבד זאת, מתנדבים לוקחים משפחות לימי כיף במהלך השבוע בין פעמיים לשלוש.
בנוסף לפעילות עם משפחות החולים, מחלקת העמותה בראש השנה ובפסח חלוקות תלושים למשפחות נזקקות בהיקפים של עשרות אש"ח.
עמותת חיוך של ילד הינה עמותה רשומה כחוק אשר כל פעילותה מבוצעת על ידי מתנדבים בלבד. 
אין בעמותה ולו עובד אחד בשכר, ובעמותה מקפידים להפנות את כל המשאבים לפעילות העמותה.
לעמותה ישנם כ - 200 מתנדבים קבועים המתפלגים ל90 חונכים ברמה שבועית והשאר מסייעים בפעילויות השוטפות ולקראת אירועי השיא. העמותה נסמכת על תרומות כספיות בלבד.
העמותה הינה מלכ"ר מאושר והיא מחזיקה בנוסף באישור לעניין תרומות לפי סעיף 46 לפקודת
מס הכנסה, הקובע כי תרומות לעמותה יוכרו לתורם כפטורים ממס.
1.2.	מבנה עמותת חיוך של ילד
פעילות העמותה היא בכלל אזורי הארץ. משרדי העמותה יושבים בבני ברק.
1.3.	תיאור מבנה הארגון
מבנה ארגוני ובעלי תפקידים:
1.	נעם נזרי - מנכל ויו"ר העמותה
2.	ליאם אביבי - מנהל העמותה
3.	אילה קריץ - רכזת טכני + רישום משפחות ומתנדבים
4.	נבו ג׳יבלי - רכז בוגרים
5.	ליה צוהר - רכזת משפחות
6.	יובל ברגיל - רכז חונכים
7.	טל לנגרמן - רכזת מתנדבים
 
תרשים 1.1 המבנה הארגוני של העמותה
1.4.	 אופי פעילות הארגון מטרותיו והיקף הפעילות
1.4.1.	 מטרות הארגון
המטרה הראשונית והעיקרית גם כיום זה מתן תמיכה לילדים חולי סרטן ומשפחותיהם 
לעמותה מטרה משנית שהיא סיוע לנזקקים
1.4.2.	 תהליך הליווי של המשפחות
בשלב ראשון מתקיים גיוס מתנדבים לעמותה על ידי רכז המתנדבים ופרסום במדיה החברתית.
בשלב שני המתנדב ממלא שאלון פרטים ובוחר מסלול התנדבותי ולאחר מכן פונה אליו רכז הרלוונטי לפי המסלול שבחר – מסלול חונכות אישית שבועית או מסלול כללי.
בשלב הבא רכז החונכים יוצר קשר עם רכז המשפחות על מנת להתאים משפחה לחונך.
במידה ונמצאה התאמה  - החונך פונה למשפחה ומתחיל להתנדב, אחרת הוא ממתין עד להתאמה.
במקביל, מתנדבים במסלול הכללי ,בתיאום עם רכזת טכני, נשלחים על ידי רכזת המתנדבים לבתי החולים לפחות פעם בשבוע , מחלקים שי למשפחות ודברי מאכל כדי לשמח אותן ומתחילים לאסוף פרטים כגון מספרי טלפון ושמות של המשפחות.
בשלב שלישי רכזת טכני משלימה את תהליך רישום המשפחה.
כל משפחה רוצה לקחת חלק בפעילויות העמותה. 
משפחה יכולה להחליט אם ברצונה לקבל חונכות או לא.
בין פעמיים לשלוש פעמים בשבוע, חונכים/מתנדבים מצטרפים עם מספר משפחות ליום כיף חוויתי.
1.4.3.	 "לקוחות"
לעמותה רשומות 200 משפחות של ילדים חולים במחלת הסרטן.
1.4.4.	 "מתחרים"
ישנן עוד מספר עמותות שעוסקות בתחום הליווי של משפחות ילדים חולי סרטן. עמותת חיוך של ילד נבדלת בכך שהיא היחידה בתחומה אשר 100% מההכנסות שלה מנותבות לחלוטין לפעילות העמותה.
1.4.5.	הכנסות
•	תרומות כספיות – דרך אתרי קמפיין גיוס כמו PEACH (בהמשך דרך דף נחיתה של העמותה), העברה בנקאית או באשראי, ביט/ פייבוקס.
•	תרומות כספיות מתורמים קבועים/חדשים של העמותה.
1.4.6.	 הוצאות
•	חלוקת תלושים למשפחות נזקקות (כרגע באופן מצומצם פעמיים בשנה)
•	הפקת אירועי שיא פעמיים בשנה
•	טיול משפחות פעמיים בשנה.
•	תחזוקת הפעילות השוטפת.
אחזקת משרדי העמותה, הציוד המשרדי, הוצאות הטלפון והאינטרנט ורכבים של העמותה ועוד כולם נתרמים ולכן אינם נכללים בהוצאות. בעמותה אין עובדים בשכר ולכן גם אין הוצאות שכר.
1.4.7.	ערוצי שיווק והפצה
•	דף נחיתה של העמותה – כרגע בהקמה
•	מדיה חברתית – אינסטגרם, פייסבוק, טיקטוק
•	פרסום בעיתונות – פליירים בבתי החולים קרוב לאירועי שיא.
1.4.8.	שיתופי פעולה – סביב אירועי השיא בעיקר
•	קו לחיים – לתמיכה במחלת CP.
•	אקי"ם – עמותה לתמיכה בבעלי מוגבלויות מוטורית.
•	נותנים תקווה  - סיוע לחיילים פצועים.
2.	מטרות הפרוייקט
2.1.	 רקע לפרוייקט
לאחר שיחה עם ליאם אביבי מנהל התפעול של העמותה, כיום אין בארגון מערכת מידע אשר מאפשרת לרשום ולנהל את המתנדבים של העמותה ואת הפעילות היומיומית וסדר היום שלהם. הרישום והמעקב אחר פעילות המתנדבים השוטפת אל מול המשפחות, מתבצע על ידי דוח ידני שממלא המתנדב בGOOGLE FORM ועובר מיד ליד לתוך קבצי אקסל נוספים, תהליך המתבצע באופן ידני על ידי מספר תפקידנים שונים בתהליכים חופפים אך נפרדים. בנוסף קשה מאוד לייצר דוח המפרט ומסכם את הפעילות ברמת שבוע, חודש ויותר לשם הפקת לקחים והתייעלות.
הטיפול והליווי של המשפחות קשה מאוד לטייב בשל חוסר בנתונים בלא מעט מהמקרים בשל האופן בו הדיווח מתבצע ומתועד.
בנוסף לכך, כל הנושא הפיננסי של ניהול ההכנסות וההוצאות של העמותה גם הוא מנוהל בקבצי אקסל (GOOGLE SHEETS) וקשה מאוד ומסורבל להפיק דוחות פיננסיים עבור תורמי העמותה. התהליך כיום מתבצע באופן ידני לחלוטין מתוך הקבצים הקיימים אף ללא שום אוטומציה בקבצי האקסל עצמם.
2.2.	מטרת העל
מעבר מאובדן מידע לשימור מידע, הפקת ידע ושימוש בו - ייעול המעקב אחר פעילות המתנדבים והליווי של המשפחות באמצעות מערכת מידע. בעזרת המערכת יוכלו אנשי הצוות השונים לתעד ולהעביר מידע
לאנשי הצוות האחרים ולקבל את המידע לו נדרשים לביצוע עבודתם בצורה יעילה ונגישה. מעקב מסודר ואוטומטי אחר הפעולות הפיננסיות של העמותה.
2.3.	מטרות משנה
•	ריכוז המידע על המתנדבים במקום אחד – מסד הנתונים שיוקם במסגרת הפרויקט ירכז את
המידע שהיה מפוזר עד היום בין קבצי אקסל שונים, במקום אחד, ויאפשר צפייה במידע
בצורה נוחה לאנשים הרלוונטיים, להנהלה, וכן למשפחות עצמן בעת הצורך.
•	מניעת אובדן מידע – מסד נתונים מסודר ואמין שבו יאוחסן ויגובה כל המידע. שימוש במסד נתונים
זה ימנע אובדן של מידע והערות חשובות על ליווי המשפחות ומעקב צמוד יותר, כפי שלא קרה עד היום בהתנהלות עם קבצי אקסל.
•	ייעול המעקב השוטף – אחר מצב המתמודדים ואפשרות להסקת מסקנות מבוססות נתונים –
הקמת מסד נתונים מסודר אשר אליו יוכנסו נתוני השתתפות המתנדבים בפעילויות באופן יומיומי/שבועי. המערכת תאפשר הפקת מידע חשוב על פעילות ליווי של מתנדב, שהוגדרה במשותף על ידי מתנדבים, רכזים וחונכים.
•	על-ידי יצירת דו"חות תקופתיים או על פי דרישה, יתאפשר מעקב מבוסס נתונים אודות פעילות הליווי על ידי משובים מסודרים ומאורגנים של המתנדבים בשטח.
•	דו״חות מסמכים אלו יאפשרו גם שיח משותף עם המתנדב והתבוננות על מצבו, ומתוך כך, ניתן יהיה לדייק את תכנית הליווי של המשפחה ואת ההתאמה בין המתנדב למשפחה אותה הוא מלווה.
•	קיצור זמני התיעוד של הפעילויות היום יומיות - בעזרת יצירת מסכים נוחים להזנה ותיעוד של הפעילויות השונות, המתנדבים יוכלו לתעד את הנתונים בזמן קצר יותר שיאפשר להם לדייק את הפעילות אותה הם מבצעים עם המשפחות
•	מסד הנתונים החדש יאפשר צמצום זמן עבודה המושקע כיום במילוי טבלאות באופן ידני ולא יעיל בכל חודש מחדש או יצירת טבלאות חדשות עבור כל תת פעילות חדשה
2.4.	מטרת משנה עתידית
מטרה זו הינה מטרה ליישום בטווח הארוך ולאחר גמר הפרויקט האקדמי.  הרחבת המערכת כך שתתמוך בכלל התהליכים להם זקוקה העמותה  ובכללם ניהול ימי כיף שלא יתכנס לכדי הגרסה שתוכן עבור הפרוייקט האקדמי. ליווי ותחזוקה של המערכת למשך כל חיי העמותה והסטודנטים שפיתחו אותה בעזרת ה' עד אורך ימים ושנים. המערכת תייעל את עבודת העמותה בכל התהליכים שלה ותופץ בין כלל מתנדבי העמותה.
3.	סקירת ספרות
3.1.	 חשיבותן של עמותות ללא רווח לתמיכה במשפחות חולי סרטן
סרטן הוא שם כללי למחלות שונות שבהן תאי הגוף מתחלקים בצורה בלתי מבוקרת. הצטברות של תאים כאלה יוצרת גידול ממאיר (נאופלזיה), ובמקרים מסוימים חלק מתאים אלה נודדים למקומות אחרים בגוף ויוצרים גרורות. הסרטן והטיפולים בו יוצרים צרכים מרובים שמתפתחים עם הזמן ונוגעים בכל היבטי החיים. Evans Webb et al (2021) מתארים את מסע ההתמודדות של החולים עם מחלת הסרטן. מסע ההתמודדדות עם הסרטן דורש טיפול, שירותים ותמיכה החורגים מעבר לצוותים המתמחים בסרטן. שילוב עמותות (COs) ברשת הטיפול בסרטן יכול לעזור לענות על מגוון הצרכים של אנשים החיים עם סרטן ולאחריו. עמותות ללא מטרות רווח ממלאות תפקיד חשוב בתמיכה במשפחות חולי סרטן על ידי מתן תמיכה רגשית, כלכלית וחברתית. הן מספקות שירותים כמו ייעוץ, תמיכה פסיכולוגית, סיוע כלכלי, והכוונה לשירותים רפואיים מתאימים. עמותות אלו גם מארגנות פעילויות חברתיות ותמיכה קבוצתית, שמסייעות למשפחות להתמודד עם האתגרים הרבים הנלווים למחלה.
et al. Al Mulla (2024) מדגימים כיצד עמותות מספקות תמיכה כלכלית ורגשית לחולי סרטן ולמשפחותיהם, ומקדמות מודעות לסרטן באמצעות קמפיינים לגיוס כספים וסדנאות מודעות. עמותות אלו גם משתפות פעולה עם ארגונים בינלאומיים ומקומיים כדי להבטיח גישה למשאבים רפואיים מתקדמים ולתמיכה מתמשכת לחולים ולמשפחותיהם. בנוסף, עמותות מסייעות בהגברת המודעות הציבורית לסרטן ולחשיבות הגילוי המוקדם, מה שיכול לשפר את סיכויי ההחלמה ולהפחית את התמותה מהמחלה. הן מקדמות מדיניות בריאותית, תומכות במחקר רפואי, ומספקות מידע חיוני לחולים ולמשפחותיהם על אפשרויות הטיפול וההתמודדות עם המחלה.
לסיכום, עמותות ללא מטרות רווח ממלאות תפקיד קריטי בתמיכה במשפחות חולי סרטן. הן מספקות תמיכה רגשית, כלכלית וחברתית, מקדמות מודעות לסרטן, ומשפרות את הגישה למשאבים רפואיים מתקדמים. באמצעות שיתופי פעולה עם ארגונים אחרים והגברת המודעות הציבורית, עמותות אלו מסייעות לחולים ולמשפחותיהם להתמודד עם האתגרים הרבים הנלווים למחלה ולהשיג איכות חיים טובה יותר.
3.2.	השפעת הטכנולוגיה על עמותות ללא רווח
3.2.1.	 טכנולוגיה היא רעיון העוסק בחיפוש פתרונות מעשיים כמענה לרצונות וצרכים, תוך ניצול חידושי המדע. הטכנולוגיה כוללת אומניות תעשייתיות מגוונות. היא עושה שימוש בכלים, מכונות, חומרה, תוכנה, שיטות ומערכות אשר חקרם ותכנונם הוא הבסיס למדעי ההנדסה השונים. (ויקיפדיה) במאמרם של Darrene Hackler ו-Gregory D. Saxton (2007) מודגשת ההשפעה המשמעותית והחשיבות של טכנולוגיית מידע (IT) על ארגונים ללא מטרות רווח, כמו גם האתגרים שהם מתמודדים איתם ביישום טכנולוגיות אלו. טכנולוגיית מידע יכולה לשנות באופן יסודי ארגונים ללא מטרות רווח על ידי שיפור היעילות הניהולית, הקלת מתן השירותים ושיפור התקשורת עם בעלי העניין. שינוי זה יכול להוביל לשיפור בלמידה הארגונית ובניהול הידע, שהם קריטיים לעבודה מונחית מטרה. ארגונים ללא מטרות רווח המשתמשים בטכנולוגיית מידע בצורה יעילה יכולים לעמוד טוב יותר בדרישות הגוברות מצד תורמים ובעלי עניין. תשתית IT חזקה מאפשרת לארגונים לשפר את איכות ההצעות, ניהול הרשומות והאחריות הכוללת, שהם חיוניים להשגת הזדמנויות מימון. בנוסף, טכנולוגיית מידע מאפשרת לארגונים ללא מטרות רווח לעסוק בתקשורת אסטרטגית, מחקר שיווקי ומאמצי גיוס כספים. לדוגמה, ארגונים משתמשים יותר ויותר בקמפיינים לגיוס כספים מבוססי אינטרנט ובפנייה בדוא"ל כדי להתחבר לתורמים וללקוחות. השימוש האסטרטגי בטכנולוגיית מידע דורש לעיתים קרובות מארגונים ללא מטרות רווח לעסוק בשותפויות ושיתופי פעולה עם ארגונים למטרות רווח וארגונים ללא מטרות רווח אחרים. שיתופי פעולה אלו יכולים להגדיל את יכולת ה-IT ולספק גישה למשאבים שחסרים לארגונים בודדים.עם זאת, ישנם אתגרים משמעותיים ביישום טכנולוגיית מידע בארגונים ללא מטרות רווח. ארגונים רבים פועלים עם תקציבים מוגבלים, מה שמגביל את יכולתם להשקיע בתשתית IT, הכשרה ותמיכה. ארגונים קטנים במיוחד מתקשים להקצות מספיק כספים ל-IT, מה שמוביל למחסור בכישורים טכניים וציוד באיכות נמוכה. בנוסף, ארגונים ללא מטרות רווח לעיתים קרובות חסרים את המומחיות הטכנולוגית הנדרשת בקרב הצוות שלהם. מחסור זה יכול להפריע ליכולתם ליישם ולהשתמש בפתרונות IT בצורה יעילה, מה שמוביל להחמצת הזדמנויות לצמיחה ויעילות. מעבר לרכישת טכנולוגיה, ארגונים ללא מטרות רווח זקוקים להכשרה מתמשכת וסיוע טכני כדי למקסם את היתרונות של IT. עם זאת, המימון מתמקד לעיתים קרובות ברכישת ציוד ולא בתמיכה מקיפה, מה שמשאיר את הארגונים לא מוכנים לנצל את השקעות ה-IT שלהם. ככל שהטכנולוגיה מתפתחת, כך גם הציפיות של תורמים ובעלי עניין לגבי איכות ומורכבות הפעילות של ארגונים ללא מטרות רווח. ארגונים שאינם מצליחים לעמוד בקצב הציפיות הללו מסתכנים בפגיעה במוניטין שלהם ובאובדן הזדמנויות מימון. למרות האתגרים, השימוש האסטרטגי בטכנולוגיית מידע חיוני לארגונים ללא מטרות רווח כדי לשגשג בנוף תחרותי. על ידי הגברת יכולת ה-IT שלהם, ארגונים ללא מטרות רווח יכולים לשפר את היעילות התפעולית שלהם, לשרת טוב יותר את הקהילות שלהם ולהשיג את מטרותיהם בצורה יעילה יותר. המפתח להתגברות על הקשיים הקשורים ליישום IT טמון בטיפוח שותפויות, הבטחת תמיכה מתמשכת והשקעה בהכשרת הצוות. בסופו של דבר, היתרונות של שימוש בטכנולוגיית מידע עולים בהרבה על הקשיים, שכן היא מאפשרת לארגונים ללא מטרות רווח להסתגל, לחדש ולמלא את תפקידיהם הקריטיים בחברה.
3.3.	 מערכות ERP בארגונים ללא מטרות רווח
3.3.1.	מהן מערכות ERP
מערכות ERP (Enterprise Resource Planning) הן מערכות תוכנה שמטרתן לשלב את כל היחידות התפקודיות של הארגון בצורה שיתופית. הן מסייעות בניהול ואינטגרציה של נתונים ומידע בין מחלקות שונות בארגון, כמו מלאי, ייצור, תכנון, הנדסה, כספים, משאבי אנוש, מכירות ושיווק. במאמרם של Chandra et al. (2022) מוצגים היתרונות והחסרונות של מערכות ERP. מערכות ERP מאפשרות אינטגרציה של מידע ניהולי בכל רחבי הארגון, מה שמאפשר גישה למידע בזמן אמת ושיפור קבלת ההחלטות. הן משפרות את היעילות התפעולית על ידי אוטומציה של תהליכים עסקיים, מה שמפחית את הצורך בעבודת יד ומקטין את הסיכוי לשגיאות. בנוסף, מערכות ERP מסורתיות מאפשרות התאמה אישית גבוהה לצרכים הספציפיים של הארגון, מה שמאפשר גמישות רבה יותר בניהול התהליכים העסקיים. כל הנתונים והמידע מנוהלים במאגרי נתונים מרכזיים ומשותפים, מה שמאפשר גישה נוחה ומהירה למידע מכל חלקי הארגון. יתר על כן, ERP מאפשר ניהול טוב יותר של משאבי הארגון, כולל משאבי אנוש, מלאי, כספים וייצור, מה שמוביל לשיפור בניצול המשאבים והפחתת עלויות. עם זאת, ישנם גם חסרונות למערכות ERP. רכישה והטמעה של מערכת ERP מסורתית כרוכה בעלויות גבוהות, כולל רכישת רישיונות, חומרה, תוכנה והתקנה. הטמעת מערכת ERP יכולה לקחת זמן רב ודורשת תכנון מדוקדק, מה שעלול לגרום לעיכובים בתהליכים העסקיים. בנוסף, הטמעת מערכת ERP כרוכה בסיכון גבוה, כולל סיכונים טכניים, תפעוליים ופיננסיים. כשלון בהטמעה יכול לגרום להפסדים כספיים משמעותיים. מערכות ERP דורשות תחזוקה שוטפת ושדרוגים תקופתיים, מה שמוסיף לעלויות התפעוליות ודורש משאבים נוספים. יתר על כן, ארגונים המשתמשים במערכות ERP מסורתיות תלויים בספקים לצורך תחזוקה, שדרוגים ותמיכה טכנית, מה שעלול לגרום לתלות גבוהה בספקים חיצוניים. 
3.3.2.	שילוב מערכות ERP בארגונים ללא מטרות רווח
במאמרם של Miranda et al. (2016) נידונות הסיבות והקשיים שהובילו ארגונים ללא מטרות רווח לאמץ מערכות ERP. אחת הסיבות המרכזיות לאימוץ מערכות אלו הייתה הצורך בשיפור היעילות והבקרה. לפני אימוץ מערכת ה-ERP, הארגון הסתמך על כלים שונים כמו גיליונות אלקטרוניים ודואר אלקטרוני, מה שגרם לחוסר סטנדרטיזציה ולניהול ידני של תהליכים רבים. מצב זה הוביל לעומס עבודה ולבעיות בקרה, כאשר דיווחים על אובדן מידע, חוסר במידע וטעויות היו נפוצים. בנוסף, הארגון נזקק למערכת שתאפשר אינטגרציה בין המחלקות השונות ותספק בסיס נתונים משותף לכל המחלקות, שכן המערכות הקודמות לא סיפקו אינטגרציה מספקת בין המודולים השונים, מה שהקשה על ניהול המידע. זכייה במכרז לא פעם הובילה להגדלת מספר החניכים שיש לנהל יצרה צורך במערכת אוטומטית שתנהל את התהליכים האדמיניסטרטיביים והפיננסיים בצורה יעילה יותר. יתר על כן, הארגון שאף לשפר את איכות השירותים שהוא מספק, כולל דיווחים מדויקים יותר ושיפור התקשורת בין המחלקות. עם זאת, היו גם קשיים שהובילו לאימוץ מערכות ERP. השימוש בכלים ידניים כמו גיליונות אלקטרוניים ודואר אלקטרוני הוביל לעומס עבודה ולבעיות בקרה, עם דיווחים על אובדן מידע, חוסר במידע וטעויות. המערכות הקודמות לא סיפקו אינטגרציה מספקת בין המודולים השונים, מה שהוביל לקשיים בניהול המידע ובקבלת החלטות. בנוסף, הארגון התמודד עם חוסר במומחיות טכנית בתחום ה-HR, מה שהוביל לצורך בשירותים חיצוניים לניהול תהליכים מורכבים כמו סגירת משכורות. היו גם התנגדויות לשינוי מצד העובדים, במיוחד כאשר מדובר במעבר ממערכות ידניות למערכות אוטומטיות. יתר על כן, עלויות ההתקנה והתחזוקה של מערכות ERP היוו אתגר משמעותי, במיוחד עבור ארגונים עם תקציב מוגבל.
לסיכום, אימוץ מערכות ERP בארגונים ללא מטרות רווח נבע מצורך בשיפור היעילות, הבקרה והאינטגרציה של מערכות המידע, כמו גם מהצורך להתמודד עם הגדלת נפח השירותים ולשפר את איכות השירות. הקשיים שניצבו בפני הארגונים כללו ניהול ידני ומורכב של תהליכים, חוסר אינטגרציה בין מערכות, חוסר במומחיות טכנית, התנגדות לשינוי ועלויות גבוהות. למרות הקשיים, הארגונים הבינו שהיתרונות של מערכות ERP עולים על החסרונות, והם בחרו לאמץ את המערכות כדי לשפר את הפעילות שלהם ולהשיג את מטרותיהם החברתיות.
3.3.3.	   אפיון המערכת עבור עמותה ללא מטרות רווח
השיקולים וההחלטות בעיצוב מערכת מידע לעמותות ללא מטרות רווח הינם מגוונים ומשמעותיים. במאמרו של Hämäläinen (2017) מצוינים השיקולים העיקריים שיש לקחת בחשבון בעת עיצוב מערכת מידע לעמותות אלו. ראשית, יש לבצע ניתוח צרכים עסקיים, שכן עמותות זקוקות לניתוח נתונים שנאספו בתהליכי גיוס כספים כדי לשפר את התקשורת עם תורמים ומתנדבים. ניתוח וסיווג הנתונים מאפשרים למצוא את הדרכים הרווחיות ביותר לעבודה עם פלחי תורמים שונים.מקורות הנתונים מגיעים ממקורות שונים, כולל מסדי נתונים המכילים מידע אישי ופיננסי על תורמים ומתנדבים, וכן מידע ממדיה חברתית. יש להעדיף נתונים ממסדי נתונים בשל היותם מאורגנים ומותאמים לצרכי העמותה. בחירת כלים אנליטיים מתאימים היא קריטית, ויש להעדיף כלים מבוססי קוד פתוח בשל מגבלות תקציביות של עמותות. המערכת האנליטית צריכה להשתלב עם מערכת ה-ERP הקיימת של העמותה, ויש להבטיח שהאינטגרציה תהיה חלקה ותאפשר העברת נתונים ותקשורת בין המערכות. בנוסף, המערכת צריכה להיות קלה לשימוש גם עבור משתמשים שאינם סטטיסטיקאים מקצועיים, ויש להציג את תוצאות הניתוח בצורה גרפית וטבלאית נוחה להבנה.ההחלטות האפיוניות בעיצוב מערכת מידע לעמותות ללא מטרות רווח כוללות פיתוח תת-מערכת אנליטית שתתמוך בצרכים האנליטיים של תהליכי גיוס כספים, תוך שימוש בכלים מבוססי קוד פתוח בשל היותם זמינים ובעלי תשתית רחבה וגמישה. איסוף הנתונים יתבצע ממסדי נתונים באמצעות שאילתות מתאימות, ויש להבטיח שהנתונים הנאספים יהיו מדויקים ומלאים כדי להבטיח תוצאות ניתוח נכונות. ניתוח הנתונים יכלול שימוש בטכניקות ניתוח שונות כמו ניתוח אשכולות (Clustering) כדי לסווג תורמים ויעדי תרומה, מה שיאפשר זיהוי דפוסי התנהגות נסתרים ופלחי תורמים רווחיים. תוצאות הניתוח יוצגו בצורה גרפית וטבלאית באמצעות כלים מתאימים, וייווצרו דוחות להצגת התוצאות למשתמשי הקצה. לבסוף, יש להשתמש בכלים מתאימים לאינטגרציה בין מערכת ה-ERP למערכת האנליטית, ולהבטיח העברת שאילתות ותוצאות ניתוח בין המערכות בצורה חלקה ויעילה.
לסיכום, עיצוב מערכת מידע לעמותות ללא מטרות רווח דורש התחשבות בצרכים העסקיים של העמותה, מקורות הנתונים הזמינים, בחירת כלים אנליטיים מתאימים, אינטגרציה עם מערכות קיימות ושימושיות המערכת. ההחלטות בעיצוב המערכת כוללות פיתוח תת-מערכת אנליטית, איסוף וניתוח נתונים, הצגת תוצאות בצורה נוחה ואינטגרציה חלקה עם מערכת ה-ERP הקיימת. כל אלו יחד תורמים לשיפור היעילות והאפקטיביות של העמותה בניהול תהליכי גיוס הכספים והתקשורת עם תורמים ומתנדבים.
3.3.4.	 תכנון ובחירת מסד נתונים
3.3.4.1.	מהו בסיס נתונים?
במאמרם של Praveen et al. (2017) מוסבר שבסיס נתונים הוא מערכת לארגון, אחסון וניהול של נתונים בצורה מסודרת ומובנית. מערכת זו מאפשרת גישה, אחזור, עדכון וניהול של נתונים בצורה יעילה ומאובטחת. בסיסי נתונים משמשים במגוון רחב של יישומים, כולל מערכות מידע ניהוליות, מערכות מסחר אלקטרוני, מערכות פיננסיות ועוד.
קיימים מספר סוגים של בסיסי נתונים, כל אחד עם מאפיינים ייחודיים. בסיס נתונים היררכי מבוסס על מבנה עץ שבו כל רשומה מקושרת לרשומה אחת בלבד כ"ילד". דוגמה לכך היא מערכת IMS (Information Management System) של IBM. בסיס נתונים רשת מבוסס על מבנה גרפי שבו רשומות מקושרות זו לזו באמצעות קשתות, מה שמאפשר קשרים רבים-לרבים בין רשומות. בסיס נתונים רלציוני, המבוסס על מודל טבלאי, מארגן את הנתונים בטבלאות ומאפשר שימוש בשפת SQL לביצוע שאילתות. דוגמאות לכך כוללות את Oracle ו-MySQL.
בנוסף, קיימים בסיסי נתונים מונחי עצמים, המבוססים על עקרונות תכנות מונחה עצמים ומאפשרים אחסון וניהול של אובייקטים ותכונותיהם. בסיסי נתונים רב-ממדיים משתמשים במבנים רב-ממדיים לארגון הנתונים ומתאימים ליישומים של ניתוח נתונים ומחסני נתונים. בסיסי נתונים NoSQL מיועדים לטיפול בנתונים לא מובנים או חצי-מובנים וכוללים מודלים כמו Key-Value, Document, Column-Oriented ו-Graph. לבסוף, בסיסי נתונים NewSQL משלבים את היתרונות של בסיסי נתונים רלציוניים עם ביצועים וסקלאביליות של NoSQL, ומיועדים לספק ביצועים גבוהים וסקלאביליות מבלי לוותר על תכונות ACID.
3.3.4.2.	בחירת בסיס הנתונים המתאים למערכת שתפותח עבור העמותה
במאמרם של Alsolbi et al. (2022) מוצגים ההתלבטויות והאתגרים בבחירה בין סוגי בסיסי נתונים שונים עבור ארגונים ללא מטרות רווח (NPOs). הבחירה בבסיס הנתונים המתאים למערכת שתפותח עבור העמותה תלויה במספר שיקולים מרכזיים.
בסיס נתונים רלציוני (RDBMS) מציע מספר יתרונות, כגון תמיכה במבני נתונים מורכבים, שימוש בשפת SQL לביצוע שאילתות, ניהול יעיל של קשרים בין טבלאות באמצעות מפתחות זרים ותמיכה בתכונות ACID (Atomicity, Consistency, Isolation, Durability). עם זאת, ישנם גם חסרונות, כמו עלות גבוהה של פעולות הצטרפות (JOIN) ומגבלות בסקלביליות ובתמיכה בנתונים לא מובנים.
בסיס נתונים NoSQL מציע גמישות גבוהה, תמיכה בנתונים לא מובנים או חצי-מובנים וסקלביליות גבוהה. עם זאת, חסרונותיו כוללים חוסר בתמיכה בתכונות ACID, חוסר ניסיון ותמיכה, ומגבלות בניהול קשרים מורכבים בין נתונים.
בסיס נתונים NewSQL משלב את היתרונות של בסיסי נתונים רלציוניים עם ביצועים וסקלביליות של NoSQL, ותומך בתכונות ACID. עם זאת, גם כאן קיימים חסרונות, כמו חוסר ניסיון ותמיכה ומגבלות בתמיכה בתכונות קיימות של RDBMS.
כאשר מדובר בצוות פיתוח תוכנה לא מנוסה, בחירת בסיס נתונים רלציוני (RDBMS) יכולה להיות הבחירה המועדפת מכמה סיבות מרכזיות. ראשית, RDBMS משתמשים בשפת SQL, שהיא שפה סטנדרטית ונפוצה לביצוע שאילתות. השפה קלה ללמידה ומאפשרת לצוות הפיתוח לבצע פעולות מורכבות כמו הצטרפות (JOIN), סינון ומיון נתונים בצורה פשוטה וברורה. שנית, בסיסי נתונים רלציוניים קיימים כבר שנים רבות ויש להם תמיכה רחבה בקהילה ובתעשייה. ישנם כלים רבים ותמיכה טכנית זמינה למשתמשים, מה שמקל על צוות הפיתוח למצוא פתרונות ותמיכה טכנית במידת הצורך.
בנוסף, RDBMS מאפשרים ניהול קשרים בין טבלאות באמצעות מפתחות זרים (Foreign Keys), מה שמבטיח את שלמות הנתונים ומונע כפילויות. זה חשוב במיוחד עבור צוות פיתוח לא מנוסה שצריך לשמור על דיוק ושלמות הנתונים. יתר על כן, RDBMS תומכים בתכונות ACID, המבטיחות את אמינות הנתונים וביצוע עסקאות בצורה בטוחה. זה חשוב במיוחד עבור צוות פיתוח שצריך להבטיח שהנתונים יהיו מדויקים ואמינים. לבסוף, ישנם משאבים לימודיים רבים זמינים ללמידת RDBMS ו-SQL, כולל קורסים מקוונים, ספרים ומדריכים. זה מאפשר לצוות הפיתוח ללמוד ולהתמקצע בטכנולוגיה בצורה מהירה ויעילה.
3.3.5.	 בחירת טכנולוגיות פיתוח
במאמרו של Kestiö (2022) נסקרים המושגים העיקריים הקיימים בכל מערכת מידע. ה-Backend הוא החלק של היישום שאינו גלוי למשתמשים, והוא כולל את כל מה שקורה מאחורי הקלעים, כמו ניהול נתונים, לוגיקה עסקית ואינטגרציה עם מערכות אחרות. ה-Backend אחראי על קבלת בקשות מה-Frontend, עיבודן ושליחת התשובות חזרה. הוא כולל את השרתים, מסדי הנתונים, ה-APIs (ממשקי תכנות יישומים) וכל הלוגיקה העסקית של היישום. תפקידיו העיקריים של ה-Backend כוללים ניהול נתונים, עיבוד נתונים וביצוע חישובים בהתאם לחוקים העסקיים של היישום, אינטגרציה עם מערכות אחרות וניהול גישה לנתונים ושמירה על פרטיות ואבטחת המידע.
ה-Frontend הוא החלק של היישום שהמשתמשים רואים ומתקשרים איתו. הוא כולל את כל מה שנמצא בצד הלקוח, כמו ממשק המשתמש (UI) והחוויה המשתמש (UX). ה-Frontend אחראי על הצגת הנתונים שהתקבלו מה-Backend בצורה ויזואלית ואינטראקטיבית, ועל קבלת קלט מהמשתמשים ושליחתו ל-Backend לעיבוד נוסף. תפקידיו העיקריים של ה-Frontend כוללים עיצוב והצגת הממשק הגרפי שהמשתמשים רואים ומתקשרים איתו, יצירת חווית משתמש נוחה ואינטואיטיבית, קבלת קלט מהמשתמשים ושליחתו ל-Backend, וקבלת תשובות מה-Backend והצגתן למשתמשים. בנוסף, ה-Frontend כולל עיצוב רספונסיבי המותאם למגוון רחב של מכשירים וגדלי מסכים.
3.3.5.1.	בחירה של שפות תכנות בעיצוב המערכת
3.3.5.1.1.	מהי שפת תכנות?
שפת תכנות היא אוסף של חוקים תחביריים (Syntax) וסמנטיים (Semantic) המגדירים שפה פורמלית שבאמצעותה ניתן להגדיר למחשב פקודות ופעולות לביצוע. שפות תכנות משמשות לכתיבת תוכנות ומאפשרות למתכנתים להגדיר תהליכים אלגוריתמיים בצורה מובנית וברורה. מאפיינים עיקריים של שפות תכנות כוללים תחביר, שהוא כללי הכתיבה של השפה המגדירים כיצד לכתוב את הקוד בצורה נכונה, וסמנטיקה, שהיא המשמעות של הקוד, כלומר מה הקוד עושה בפועל. בנוסף, שפות תכנות כוללות מבני נתונים, שהם סוגי הנתונים שהשפה יודעת לטפל בהם, כמו מספרים, מערכים, רשימות, מבנים, אובייקטים ופונקציות. פקודות ומבני בקרה הם חלק נוסף חשוב, הכוללים הצהרה על משתנים, פעולות אריתמטיות, לולאות ותנאים. פרדיגמות תכנות הן גישות שונות לתכנות, כמו תכנות אימפרטיבי, תכנות מונחה עצמים, תכנות פונקציונלי ותכנות לוגי. מערכת טיפוסים היא מאפיין נוסף, כאשר שפות עשויות להיות בעלות טיפוסיות חזקה, חלשה, או לא קיימת, עם בדיקות טיפוסים דינמיות או סטטיות.
קיימים סוגים שונים של שפות תכנות, כל אחת עם מאפיינים ייחודיים. שפות עיליות מעניקות רמה גבוהה של הפשטה ומאפשרות כתיבת קוד קריא ותחזוקה קלה יותר. דוגמאות לשפות עיליות כוללות Python, Java ו-C++. שפות סף (Assembly) קרובות לשפת מכונה ומאפשרות שליטה מדויקת על החומרה. דוגמה לשפה כזו היא Assembly. שפות תסריט (Scripting) הן שפות דינמיות המפורשות בזמן ריצה, ודוגמאות לכך כוללות JavaScript, Python ו-PHP.
שפות תכנות הן כלי מרכזי בעולם הטכנולוגיה והפיתוח, ומאפשרות למתכנתים ליצור תוכנות, אתרי אינטרנט, אפליקציות, משחקים ועוד.
3.3.5.1.2.	בחירת שפות תכנות מתאימות בהתאם לאילוצי הפרוייקט
כפי שראינו ישנן שפות רבות בהן ניתן לבחור בעיצוב המערכת עבור הפרוייקט
3.3.5.1.2.1.	שפת פיתוח לBackend: 
כפי שראינו, ישנן שפות רבות בהן ניתן לבחור בעיצוב המערכת עבור הפרויקט. במאמרם של Jain et al. (2024) מוצגים היתרונות של שפת פייתון ומדוע היא מתאימה במיוחד למתכנתים מתחילים, במיוחד לפיתוח Backend. התחביר של פייתון פשוט וקריא, מה שמקל על מתכנתים מתחילים ללמוד ולהבין את השפה. התחביר מבוסס על עקרונות של קריאות ופשטות, מה שמפחית את המורכבות התחבירית ומאפשר למתחילים להתמקד בפתרון בעיות ובחשיבה אלגוריתמית במקום להיתקע על תחביר מורכב. פייתון היא שפה גמישה שמתאימה למגוון רחב של תחומים, כולל פיתוח אתרי אינטרנט, ניתוח נתונים, למידת מכונה, חישוב מדעי ואוטומציה. הספריות המובנות והאקוסיסטם הרחב של חבילות צד שלישי מספקים כלים ומשאבים מוכנים לשימוש, מה שמאפשר למתחילים להתמודד עם נושאי מחקר שונים.
לפייתון יש קהילה גדולה ותומכת של מפתחים, מורים ותומכים שמספקים מידע מעמיק, מדריכים, שיחות רשת ומשאבים נוספים. הקהילה יוצרת סביבה לימודית שיתופית שמעודדת שיתוף ידע ומספקת תמיכה למתחילים לאורך כל הדרך. האקוסיסטם של פייתון כולל ספריות מובנות רבות וחבילות צד שלישי שמספקות כלים לפיתוח מהיר וניתוח נתונים, שימוש באלגוריתמים ועוד. לדוגמה, ספריות כמו NumPy, Pandas, Matplotlib, TensorFlow ו-PyTorch מספקות כלים לפיתוח ולמידת מכונה, ניתוח נתונים וחישוב מדעי.
המפרש (Interpreter) של פייתון מאפשר פיתוח אינטראקטיבי, עיצוב מהיר וניפוי שגיאות קל. מתכנתים יכולים לכתוב ולהריץ את הקוד שורה אחר שורה, לבדוק את הקוד בסביבה אינטראקטיבית (Python REPL) ולחזור על התהליך במהירות. זה מאפשר למתחילים לפתח ולבדוק את הקוד בצורה מהירה ויעילה.
לסיכום, כדאי לבחור בפייתון לפיתוח Backend בגלל התחביר הפשוט והקריא שלה, הספריות והכלים המוכנים לשימוש, התמיכה הקהילתית הרחבה והיכולת לפיתוח אינטראקטיבי וניפוי שגיאות קל. פייתון מאפשרת למתחילים להתנסות בתחומים שונים ולפתח מיומנויות מגוונות במהירות וביעילות.
3.3.5.1.2.2.	בחירת שפת תכנות ל Frontend
במאמרו של Naik (2024) מוצגים היתרונות של שפת React לפיתוח Frontend ומדוע היא מתאימה במיוחד לפרויקטים שונים. React משתמשת ב-Virtual DOM, מה שמאפשר עדכונים מהירים ויעילים של הממשק הגרפי, ומשפר את הביצועים ומקטין את זמן התגובה של היישום. React נהנית מקהילה גדולה ותומכת של מפתחים, המספקת משאבים רבים, תוספים ותמיכה טכנית. הקהילה הפעילה תורמת לזמינות של משאבים ותמיכה, מה שמקל על המפתחים.
React מאפשרת פיתוח מבוסס רכיבים, מה שמקל על ניהול מצבים מורכבים של היישום. רכיבים ניתנים לשימוש חוזר, מה שמפשט את התחזוקה והפיתוח של היישום. בנוסף, React היא ספרייה גמישה מאוד שניתן לשלב עם כל Backend, מה שמאפשר למפתחים לבחור את הכלים והטכנולוגיות המתאימים ביותר לצרכים שלהם. React מתאימה לפיתוח יישומים בקנה מידה גדול, והארכיטקטורה המבוססת רכיבים מאפשרת להרחיב את היישום בצורה יעילה ולנהל מצבים מורכבים.
React תומכת בניהול מצבים באמצעות Flux/Redux, מה שמאפשר ניהול יעיל של מצבים מורכבים ביישום. בנוסף, React כוללת כלים ו-CLI (Command Line Interface) שמקלים על הפיתוח והתחזוקה של היישום.
לסיכום, React היא בחירה מצוינת לפיתוח Frontend בפרויקט שלנו בגלל הביצועים המצוינים שלה, התמיכה הקהילתית הרחבה, הארכיטקטורה המבוססת רכיבים, הגמישות הגבוהה והסקלאביליות. React מאפשרת פיתוח מהיר ויעיל של ממשקים גרפיים מורכבים, ומספקת כלים לניהול מצבים מורכבים ולתחזוקה קלה של היישום. התמיכה הקהילתית הרחבה והכלים המתקדמים הופכים את React לבחירה אידיאלית עבור הפרויקט שלנו.
3.3.5.2.	פיתוח מערכת מידע במחשוב ענן
3.3.5.2.1.	מהו מחשוב ענן?
במאמרם של Malik et al. (2018) מחשוב ענן מתואר כטכנולוגיה של הדור הבא, המאפשרת לספק שירותים איכותיים למשתמשים באמצעות שרתים מרוחקים. מחשוב ענן, המכונה גם מיקור חוץ של נתונים, מאפשר אחסון נתונים ושירותים אחרים ללא צורך בתשתית מלאה של תוכנה וחומרה. כדי לגשת ליישומי ענן, נדרשת חיבור אינטרנט מהיר ודפדפן אינטרנט סטנדרטי. מחשוב ענן מציע גישה לפי דרישה למשאבים משותפים הממוקמים במרכזי נתונים של ספקי שירותי ענן.

החשיבות של מחשוב ענן נובעת מהיכולת שלו לספק גישה למגוון רחב של יישומים ושירותים ללא צורך ברכישת רישיונות, התקנה או תחזוקה של תוכנות. הוא מפחית את עלויות ההתקנה והתפעול של מחשבים ותוכנות, ומאפשר למשתמשים לגשת לנתונים מכל מקום באמצעות חיבור לרשת. בנוסף, מחשוב ענן מאפשר לארגונים לשכור את השימוש בתשתיות מחשוב מצד שלישי ולשלם רק עבור המשאבים שהם משתמשים בהם.

למחשוב ענן יש מספר יתרונות מרכזיים. ראשית, הוא מציע גמישות גבוהה, שכן ניתן להגדיל או להקטין את המשאבים לפי הצורך. שנית, הוא מספק זמינות ואמינות גבוהה, שכן השרתים המארחים את השירותים הם אמינים ומפחיתים את הסיכוי לכשל בתשתית. שלישית, מחשוב ענן מאפשר תחזוקה קלה יותר של יישומים, שכן אין צורך בהתקנה על כל מחשב בנפרד. בנוסף, הוא מציע עלות נמוכה יותר, שכן אין צורך בהקמת תשתית פנימית. יתרון נוסף הוא מודל התשלום לפי שימוש, המאפשר למשתמשים לשלם רק עבור השירותים שהם צורכים.

עם זאת, ישנם גם חסרונות למחשוב ענן. ראשית, ישנם חששות בנוגע לאבטחת המידע ופרטיות הנתונים, שכן הנתונים מאוחסנים בשרתים מרוחקים של ספקי שירותי ענן. שנית, ישנה תלות בספקי השירותים, מה שעלול לגרום לבעיות במקרה של תקלות או הפסקות שירות. בנוסף, ישנם אתגרים בניהול ובקרה על המשאבים, שכן המשתמשים אינם שולטים באופן ישיר בתשתיות המחשוב.

לסיכום, מחשוב ענן מציע יתרונות רבים כמו גמישות, זמינות, אמינות ועלות נמוכה, אך יש לקחת בחשבון גם את החסרונות כמו חששות אבטחה ותלות בספקי השירותים. הטכנולוגיה מאפשרת לארגונים ולמשתמשים פרטיים לנצל את היתרונות של תשתיות מחשוב מתקדמות ללא צורך בהשקעה גדולה בתשתיות פנימיות.
3.3.5.2.2.	שימוש במחשוב ענן בפיתוח מערכת המידע עבור העמותה
כיום, העמותה משתמשת במוצרי הענן של גוגל לשם התהליכים הקיימים שלה. זה אך טבעי שהמערכת שתפותח עבורם תעניק את אותה חווית המשתמש ממנה הם נהנים היום. במאמרם של Paul et al. (2018) נדון השימוש במחשוב ענן וכיצד הוא יכול להיטיב עם עמותות וארגונים ללא מטרות רווח. מחשוב ענן הוא פלטפורמת IT המאפשרת וירטואליזציה של חומרה, תוכנה, יישומים ושירותים אחרים ממקום מרוחק. טכנולוגיה זו מאפשרת ליחידה מרכזית לנהל מספר רב של לקוחות בו זמנית, מה שמכונה ענן ציבורי. עבור עמותות, מחשוב ענן מציע יתרונות רבים שיכולים לשפר את היעילות והאפקטיביות של ניהול המידע והמשאבים.

ראשית, מחשוב ענן מאפשר לעמותות לחסוך בעלויות תשתית. במקום לרכוש ולהתקין חומרה ותוכנה יקרים, העמותות יכולות לשכור את השימוש במשאבים מצד שלישי ולשלם רק עבור המשאבים שהם משתמשים בהם. זה מפחית את הצורך בהשקעה ראשונית גדולה ומאפשר גמישות כלכלית רבה יותר. בנוסף, מחשוב ענן מציע גמישות גבוהה, שכן ניתן להגדיל או להקטין את המשאבים לפי הצורך, מה שמאפשר לעמותות להתאים את השימוש במשאבים לצרכים המשתנים שלהן.

שנית, מחשוב ענן מספק זמינות ואמינות גבוהה. השרתים המארחים את השירותים הם אמינים ומפחיתים את הסיכוי לכשל בתשתית. זה חשוב במיוחד עבור עמותות, שכן כל הפסקת שירות עלולה לפגוע בפעילות השוטפת וביכולת לספק שירותים לקהילה. בנוסף, מחשוב ענן מאפשר תחזוקה קלה יותר של יישומים, שכן אין צורך בהתקנה על כל מחשב בנפרד. העדכונים והתחזוקה מתבצעים באופן אוטומטי על ידי ספק השירות, מה שמפחית את העומס על צוות ה-IT של העמותה.

יתרון נוסף של מחשוב ענן הוא היכולת לגשת לנתונים מכל מקום ובכל זמן. זה מאפשר לעובדי ומתנדבי העמותה לעבוד מרחוק ולגשת למידע הנחוץ להם מכל מקום בו הם נמצאים. זה משפר את הגמישות התפעולית ומאפשר לעמותה להרחיב את פעילותה ולהגיע לקהלים רחבים יותר.

עם זאת, ישנם גם חסרונות למחשוב ענן שיש לקחת בחשבון. ראשית, ישנם חששות בנוגע לאבטחת המידע ופרטיות הנתונים, שכן הנתונים מאוחסנים בשרתים מרוחקים של ספקי שירותי ענן. עמותות צריכות לוודא שספק השירות עומד בתקני אבטחה מחמירים ומספק הגנה מספקת על הנתונים. שנית, ישנה תלות בספקי השירותים, מה שעלול לגרום לבעיות במקרה של תקלות או הפסקות שירות. בנוסף, ישנם אתגרים בניהול ובקרה על המשאבים, שכן המשתמשים אינם שולטים באופן ישיר בתשתיות המחשוב.

לסיכום, מחשוב ענן מציע יתרונות רבים לעמותות, כולל חיסכון בעלויות, גמישות, זמינות ואמינות גבוהה, ויכולת גישה לנתונים מכל מקום. עם זאת, יש לקחת בחשבון גם את החסרונות כמו חששות אבטחה ותלות בספקי השירותים. על העמותות לשקול את היתרונות והחסרונות ולבחור בפתרון המתאים ביותר לצרכיהן ולמשאביהן.
ביבליוגרפיה:
Al Mulla, A., Mohamed, M. (2024). Nongovernmental Organizations’ (NGO) Role in Cancer Care in the UAE: Friends of Cancer Patients as an Example. In: Al-Shamsi, H.O. (eds) Cancer Care in the United Arab Emirates. Springer, Singapore. https://doi.org/10.1007/978-981-99-6794-0_9

Alsolbi, I., Anheier, H. K., Anitha, P., Aria, M., Australian Charities and Not-for-Profits Commission, Bambha, K., ... & Zarei, E. (2022). A systematic review and taxonomy of data analytics in nonprofit organisations. *University of Technology Sydney*. Retrieved from https://opus.lib.uts.edu.au/handle/10453/169856.

Chandra, N., & Rastogi, P. (2022). Analysis of benefits and drawbacks of traditional ERP versus cloud based ERP systems. International Journal of Latest Trends in Engineering and Technology, 9(4), 52-56. Retrieved from https://www.researchgate.net/publication/364387753_ANALYSIS_OF_BENEFITS_AND_DRAWBACKS_OF_TRADITIONAL_ERP_VERSUS_CLOUD_BASED_ERP_SYSTEMS

Evans Webb, M., Murray, E., Younger, Z.W. et al. The Supportive Care Needs of Cancer Patients: a Systematic Review. J Canc Educ 36, 899–908 (2021). https://doi.org/10.1007/s13187-020-01941-9

Hackler, D., & Saxton, G. D. (2007). The strategic use of information technology by nonprofit organizations: Increasing capacity and untapped potential. Public Administration Review, 67(3), 482-493. https://doi.org/10.1111/j.1540-6210.2007.00730.x

Hämäläinen, A. (2017). Development of prototype of analytical subsystem in R and integration with enterprise resource planning system (Master’s thesis, Helsinki Metropolia University of Applied Sciences).

Jain, P., Soni, H., Singh, A. P., Mehta, P., & Babani, N. (2024). Comparative review of Python and C: Choosing the right language for beginners. International Journal of Engineering Trends and Applications (IJETA), 11(3), 148-156

Kestiö, H. (2022). Web application development: What does it consist of? Turku University of Applied Sciences. Retrieved from https://opus.lib.uts.edu.au/handle/10453/169856.

Malik, M. I., Wani, S. H., & Rashid, A. (2018). Cloud computing-technologies. International Journal of Advanced Research in Computer Science, 9(2), 379-384. http://dx.doi.org/10.26483/ijarcs.v9i2.5760
Miranda, M. Q., Farias, J. S., Schwartz, C. A., & Almeida, J. P. L. (2016). Technology adoption in diffusion of innovations perspective: Introduction of an ERP system in a non-profit organization. RAI Revista de Administração e Inovação, 13(2), 48-57. https://doi.org/10.1016/j.rai.2016.02.001
Naik, A. S. (2024). The front-end dilemma: How to choose the perfect technology for your application. *Journal of Computer Science and Technology Studies, 6*(1), 211-216. https://doi.org/10.32996/jcsts.2024.6.1.24.

Paul, P. K., Aithal, P. S., & Bhuimali, A. (2018). Not profit technologies: Emphasizing open source cloud computing. *SSRN Electronic Journal*. https://ssrn.com/abstract=3043731

Praveen, S., Chandra, U., & Wani, A. A. (2017). A literature review on evolving database. *International Journal of Computer Applications, 162*(9), 35-41.

4.	תיאור מצב קיים
4.1.	תיאור תהליכים
בעמותה מתקיימים תהליכים רבים. ניתן לחלקם לקטגוריות שונות:
•	תהליכי הנהלה – ניהול העמותה, ניהול כספים, ניהול משאבי אנוש ותהליכים נוספים מול גורמים
•	חיצוניים.
•	תהליכי ניהול המתנדבים – גיוס מתנדבים, מיון למסלולים השונים וניתוב לרכז המתאים, מעקב שוטף, שליחת מתנדבים לפעילויות השונות וקבלת משוב.
•	תהליך ליווי המשפחות – התהליכים המרכזיים של משפחה בעמותה הינם: תהליך קליטה, תהליך
ליווי ותהליך עזיבה.
•	שלב קליטת מתנדב – גיוס המתנדב לעמותה בערוצים השונים, בירור העדפות וקליטה, התאמת משפחה לחונך.
•	שלב השגרה – מעקב שוטף אחר התנהלות המתנדבים בליווי המשפחות על ידי רכז חונכים, או רכז מתנדבים עבור מתנדבים כלליים באירועי השיא
•	שלב עזיבת משפחה – עדכון פרטי משפחה שעזבה את העמותה לאחר פטירה ל"ע/החלמה.
4.2.	 הגדרת תפקידים
מנכ"ל ויו"ר העמותה - אחראי על ניהול כולל של העמותה, קביעת חזון ויעדים אסטרטגיים, ופיקוח על יישומם.
מנהל התפעול והכספים - אחראי על ניהול הפעילות השוטפת של העמותה, כולל פיקוח על צוות הרכזים והמתנדבים, ויישום המדיניות והנהלים, ניהול כספי ותקציבי העמותה.
רכזת טכני + רישום משפחות ומתנדבים - אחראית על ניהול ותפעול טכני של העמותה, כולל רישום משפחות ומתנדבים, ותמיכה טכנית בפעילויות השונות, יצירת קשר עם מתנדבים לשם השמתם לרכז המתאים.
רכז בוגרים - אחראי על ניהול וליווי  של בוגרי העמותה
רכזת משפחות - אחראית על ניהול הקשר עם משפחות הילדים החולים, כולל תמיכה וליווי אישי למשפחות.
רכז חונכים - אחראי על ניהול וליווי שוטף של החונכים.
רכזת מתנדבים - אחראי על ניהול וליווי שוטף של המתנדבים הכלליים באירועי העמותה.
מתנדב כללי – משתתף באירועי העמותה ולא מבצע חונכות.
חונך – מתנדב אשר מלווה משפחה באופן שבועי למפגש חונכות ומקיים ימי כיף עם המשפחה הנחנכת. חונך יכול גם להשתתף באירועי השיא כמו מתנדב כללי.
4.3.	כלים קיימים לשימור ואחסון מידע
כיום המידע שנאסף בעמותה נשמר בכמה אופנים, כולם דיגיטליים:
•	רישום משפחות: לאחר קבלת פרטים ראשוניים (שם הילד החולה ומספר טלפון) מהמתנדב, רכזת המשפחות מבצעת מילוי מלא של פרטי המשפחה טלפונית.
•	רישום מתנדבים : רישום ראשוני של מתנדבים מתבצע דרך Google Forms. לאחר רישום בטופס הנ"ל, הרכז המתאים מתקשר למתנדב כדי למלא את הפרטים החסרים ולמיין אותו לחונכות או מסלול כללי ומעדכן את טבלת מעקב המתנדבים.
•	טבלאות מעקב משפחות: רכזת משפחות מנהלת מעקב אחר הטבלה ב Google Sheets לאחר מילוי הפרטים על ידי הרכזת טכני.
•	טבלאות מעקב מתנדבים: רכזת מתנדבים מנהלת מעקב אחר הטבלה ב Google Sheets לאחר מילוי הפרטים על ידי הרכזת טכני.
•	משוב חונכים: רכז החונכים ממלא משוב בטבלת דו"ח ביקור לאחר חונכות שבוצעה על ידי חונך. 
•	משוב מתנדבים: רכז המתנדבים ממלא משוב ידנית בטבלת דו"ח ביקור לאחר פעילות התנדבותית של מתנדב כללי. 
•	מעקב בוגרים: רכז הבוגרים מנהל מעקב אחר הטבלה ב Google Sheets ומעדכן בהתאם באופן ידני.
 
טבלת מתנדבים המשובצים לחונכות

 
טבלת מתנדבים מיועדים לגיוס
 

טבלה כללית לכל המתנדבים
 
 
 
 
טבלת מעקב משפחות
 
דו"ח ביקור – משוב לכלל המתנדבים
 
טבלת מעקב בוגרים
4.4.	 ניתוח תהליכים
4.4.1.	 תהליך רישום משפחה -  רישום משפחה כיום מתבצע על ידי פרטים ראשוניים המסופקים על ידי מתנדב בבית החולים האוסף פרטים מהמשפחה המעוניינת להצטרף לעמותה. לרוב מקבלים מהמתנדב מספר טלפון ושם הילד/ה החולה. מעבר לכך המתנדבים לא מספקים מידע נוסף ולרוב אף שם לא מתקבל. המידע מועבר בווטספ לרכזת טכני כדי שלאחר מכן תצור קשר עם המשפחה ותרשום את כלל הפרטים אותם מעוניינת המשפחה לספק. המשפחה עצמה בבית החולים לא מסוגלת בעיקר רגשית לספק פרטים רבים ולכן השיחה הטלפונית היא הערוץ היחיד בו מתקבלים הפרטים לשם הקמת משפחה חדשה בעמותה.
 
4.4.2.	תהליך רישום מתנדב – מתנדב אשר רוצה להתגייס לעמותה ממלא פרטים  - לרוב לא ממלאים את כל הפרטים – ובשאלון אותו ממלא המתנדב הוא מסמן האם הוא רוצה לקחת חלק בחונכות שבועית או לא. לאחר שליחת הטופס חוזר אליו הרכז חונכים בחר בחונכות לפי בחירתו ומשלים איתו את הפרטים שנותרו, אחרת מועבר ישר למתנדבים כלליים.
 
4.4.3.	תהליך עדכון פרטי משפחה – כאשר למשפחה ישנם פרטים לעדכן ובפרט אם הם רוצים לשנות את בחירתם אם לקבל חונכות או לא, החונך יוצר קשר עם רכז החונכים או המשפחה יוצרת קשר ישיר עם הרכזת משפחות והרכזת מעדכנת את הפרטים בטבלת המשפחות.
 
4.4.4.	תהליך התאמת משפחה לחונך -  רכז חונכים פונה לרכזת משפחות ויחדיו הם מנסים להתאים חניך למתנדב רשום. כל עוד לא נמצא חניך, החונך ממתין להתאמה ובינתיים עובר למסלול התנדבות כללי עד אשר תימצא לו התאמה. הרכזים נפגשים אחת לשבוע כדי לנסות להתאים חניכים לחונכים על פי מרחק גיאוגרפי ועוד פרמטרים בלתי מדידים.
 
4.4.5.	תהליך מחיקת משפחה – כאשר משפחה עוזבת בשל פטירת ל"ע או החלמה של הילד, יש לעדכן את הפרטים הללו בטבלה ולכן הרכזים נדרשים לוודא מול המתנדבים אחת לחודש האם חל שינוי כלשהו בפרטי המשפחה, אם עזבה או אם נשארה ונשתנו פרטים כלשהם. במידה ומשפחה עזבה רכז חונכים או רכזת הטכני מוחקים אותה מהגיליון. אין מעקב הסטורי על משפחות שעזבו את העמותה או אי פעם היו חלק ממנה. לא תמיד יש סנכרון לגבי מחיקת משפחה ולפעמים זה מתגלה לאחר המחיקה לרכז שלא ביצע את הפעולה. מחיקה היא פעולה יזומה ולא תמיד קורית לאחר פטירה ל"ע או החלמה. ישנם מקרים בהם משפחה נשארת גם לאחר כל אחד מהמקרים הנ"ל.
 
4.4.6.	תהליך עדכון פרטי מתנדב – מתנדב שרוצה לעזוב חונכות או רוצה להצטרף צריך לעדכן את פרטיו על ידי הרכז המתאים. המתנדב יוצר קשר טלפוני עם הרכז והרכז מעדכן את הנתונים בכלל הטבלאות המתאימות באופן ידני. המתנדב עובר מסלול לפי הצורך לאחר פנייה מהרכז החדש אליו השתייך. רכז חונכים מעדכן את רכזת המשפחות למקרה בו מתנדב הצטרף לחונכים.
 
4.4.7.	תהליך הוספת בוגר – כאשר הילד החולה גדל מעבר לגיל 17, יש לצרפו לקבוצת הבוגרים. רכז הבוגרים מנהל מעקב ובהתאם לגיל הילד מעדכן את טבלת הבוגרים באופן ידני. אם החולה היה חניך רכז הבוגרים מעדכן בטבלת משפחות את מצב החונכות כלא רלוונטי ומדווח לרכז החונכים על כך אלא אם הבוגר רוצה להמשיך בחונכות. רכז החונכים מעדכן את החונך בהתאם ומסיר את החונכות ממנו.
 
4.4.8.	תהליך קבלת משוב חונכים – אחת לשבוע מתקיימת חונכות. החונך ממלא דוח ביקור לאחר הביקור באמצעות שאלון GOOGLE FORMS.  המידע מגיע לטבלת אקסל ישירות. רכז החונכים עובר על המשוב בטבלת דו"ח ביקור ויוצר קשר עם החונכים לאחר ביקור ראשון או אם קרה משהו קריטי.
 
4.4.9.	תהליך קבלת משוב מתנדבים כלליים – במהלך השבוע ישנם ימי כיף למשפחות. גם מתנדב כללי וגם חונך יכולים להשתתתף בו. לאחר  היום כיף מתקבל משוב מהמתנדבים על ידי מילוי שאלון בGOOGLE FORMS באופן זהה למשוב חונכות. רכז המתנדבים הכלליים  עובר עליו בטבלת דו"ח ביקור. משוב זה מתקבל גם לאחר אירועי השיא הדו שנתיים. במידת הצורך יוצר הרכז קשר עם המתנדב באופן טלפוני.
 

5.	אפיון המערכת החדשה
5.1.	מטרות המערכת
•	אפשרות ניהול של כלל תהליכי העמותה
•	ייעול תהליכי העמותה הקיימים
•	קיצור זמנים בביצוע פעולות
•	איזון עומסים – ע"י אפשרות לעבודה וביצוע פעולות במקביל למספר אנשים 
5.2.	 קהל היעד של המערכת
המערכת מיועדת לשימוש פנימי בלבד של חברי העמותה
5.3.	אילוצים ומגבלות
5.3.1.	אילוצי זמן
•	מכיוון שמדובר בפרויקט גמר מטעם האוניברסיטה נדרש לעמוד ביעדי הגשת הדוחות ובתאריך היעד לסיום הפרויקט כולו – 31/07/2025
•	במהלך הפרויקט מתקיים חג הפסח שהוא מבחינת העמותה נקודת ציון משמעותית בשנה. בחג העומס על העמותה גדול מאוד והעבודה עבור חלוקת תלושים גוזלת זמן רב יחד עם אי זמינות בעלי התפקידים לתצפיות ושאלות.
5.3.2.	אילוצי משאבים
•	המשאב האנושי – אנחנו בונים את הפרויקט לבד ולכן כל העומס נמצא על שני אנשים ותו לא.
•	המשאב הכלכלי – העמותה הינה ללא מטרת רווח ומתקיימת מתרומות כספיות בלבד ולכן
•	אין משאב כספי כמעט בכלל לטובת הפרויקט.
•	המשאב הפיזי – ישנו צורך באחסון הנתונים באופן מקומי או אחסון בענן. כרגע הבחירה היא באחסון בענן בתשתיות חינמיות. כאשר יעלה צורך לסקלביליות בגודל העמותה, נושא של תשלום לשם הגדלת המשאבים יודן בבירור עם הנהלת העמותה.
5.3.3.	 אילוצים נוספים
•	פרטיות - מדובר במידע רגיש על משפחות נזקקות ולכן מרבית הנתונים מוסתרים ובהצגת המערכת יעשה שימוש במאגר מידע פיקטיבי לטובת ההדגמה כדי לשמור על פרטיות המשפחות
•	חיסיון רפואי - מדובר במידע רגיש על משפחות הילדים החולים במחלה ולכן מרבית הנתונים מוסתרים אף לגביהם. בהצגת המערכת יעשה שימוש במאגר מידע פיקטיבי לטובת ההדגמה כדי לשמור על פרטיות המשפחות
5.4.	היקף ותכונות המערכת
המערכת מיועדת להחליף את כלל ניהול תהליכי העמותה, כולל החלפת כלל הטבלאות והדוחות אשר קיימים כיום.
בשלב הראשון לטובת הפרויקט ניצור את המסכים הבאים:
•	מסך ניהול מתנדבים
•	מסך ניהול בוגרים
•	מסך ניהול חונכות
•	מסך ניהול משפחות
•	מסך ניהול בריאים
•	מסך התאמת חונכות
•	דוחות משוב: חונכות,התנדבות כללית
•	לוח משימות
•	ניהול הרשאות
•	בקרה
כמו כן, מדובר במערכת מורכבת בעלת מספר רב של מסכים ולכן ישנם מסכים ואפשרויות
שמתוכננות לשלב הבא לאחר סיום הפרויקט כהרחבה לתהליכים ולדוחות שיבנו.
בשלב הבא מתוכנן:
•	טעינת אקסל למערכת עבור משפחות ורשימות מתנדבים
•	ניהול כספים – נדבך שלם במערכת שלא יפותח במסגרת הפרוייקט האקדמי
•	ניהול ימי כיף - נדבך שלם במערכת שלא יפותח במסגרת הפרוייקט האקדמי
•	דוחות: דוח אירוע יום כיף
•	מסך ספקים
5.5.	הנחות יסוד
•	המערכת מיועדת לשימוש פנימי של הנהלת העמותה
•	המערכת תשמש את העמותה גם לאחר סיום הפרויקט ויתכן שתגרור עימה עלויות תחזוקה, אחסון ושימוש בפעולות בתשתית עליה תפותח המערכת או מעבר לתשתית אחרת עם יותר יכולות.
•	ישנם מספר סוגי משתמשים בעלי הרשאות שונות
•	עדכון הנתונים נדרש להתבצע בזמן אמת
•	יתכנו שינויים עתידיים במידע ששמור על בעלי התפקידים והמשפחות ולכן נדרש לשמור על ריבוי שדות פתוחים על מלל חופשי לדוגמת הערות עבור הימנעות מריבוי שינויים בפיתוח לאחר סיום הפרויקט.
5.6.	משתמשים והרשאות
במערכת ישנם סוגים שונים של הרשאות וגישות למשתמשים על מנת למנוע גישה לא נצרכת למידע או איבוד מידע על ידי משתמשים לא מורשים
5.6.1.	 מנהל מערכת ADMIN.
5.6.2.	 מנהל כספים – מסכי ניהול כספים בלבד.
5.6.3.	 רכז טכני – כלל ההרשאות כמו לADMIN מלבד ניהול כספים.
5.6.4.	 רכז מתנדבים/משפחות/חונכים/בוגרים – עדכון פרטי משפחה בלבד כולל סימון למחיקה.
5.6.5.	 מתנדב – יצירת משפחה בלבד.
סוג הרשאה	רמות משתמשים
יצירה, עדכון ומחיקת משתמשים,מתן הרשאות	מנהל מערכת
יצירת מתנדב ועדכון פרטיו	מנהל מערכת, רכז מתנדבים/משפחות/חונכים/בוגרים
יצירת משפחה עדכון ומחיקה	מנהל מערכת, רכז טכני
עדכון פרטי משפחה וסימון למחיקה	מנהל מערכת, רכז טכני,רכז מתנדבים/משפחות/חונכים/בוגרים
יצירה עדכון ומחיקה של פעילות כספית	מנהל מערכת
צפייה בפרטי מתנדב	מנהל מערכת, רכז טכני,רכז מתנדבים/משפחות/חונכים/בוגרים
צפייה בפרטי משפחה	מנהל מערכת, רכז טכני,רכז מתנדבים/משפחות/חונכים/בוגרים
טבלה XXXXX פירוט הרשאות במערכת המידע
5.7.	פונקציונליות ומסכים
5.7.1.	התחברות למערכת
באמצעות שם משתמש וסיסמה אישיים שיופקו טרם השימוש הראשון ע"י מנהל המערכת. לא ניתן להירשם למערכת בדרך אחרת, על מנת למנוע גישה של אנשים שאינם מורשים למידע האישי של המשפחות.
5.7.2.	 מסך כניסה
במסך הכניסה יופיעו הכפתורים הראשיים של המערכת  - משימות, משפחות, מתנדבים, חונכות, הפקת דוחות, ניהול מערכת.
 

תמונה 5.1 – מסך הכניסה למערכת
5.7.3.	 משימות – TASKS
כניסה למסך "משימות" תציג רשימה של כל המשימות הקיימות לפי סוג המשתמש שביצע כניסה (המערכת תזהה באופן חכם מה סוג המשתמש ותציג רק את המשימות הרלוונטיות לו). 
תהיה אפשרות לחפש משימה לפי מילות חיפוש, או לסנן לפי קריטריון מסוים. בכניסה למשימה תהיה אפשר לראות את הפרטים שלה, וכן תופיע אפשרות לערוך ולעדכן אותה.
משימה יכולה להווצר באופן ידני באמצעות כפתור "צור משימה חדשה" אשר יוביל למסך יצירת משימה ויכולה להווצר אוטומטית על ידי תהליכי רקע הקורים במערכת. משימת הקמת משפחה היא המשימה היחידה שלא מופיעה בלוח המשימות משום שאיננה מתייחסת לישות קיימת הדורשת עדכון, בדומה להקמת מתנדב שאינו קיים במערכת. כלל המשימות יתועדו באופן המאפשר מעקב על התקדמות וקצב ביצוע המשימות הכולל ובהתפלגות לסוגי המשימות השונים.
 
סוגי המשימות הקיימים במערכת:
1.	משימות הנוצרות באופן אוטומטי
a.	ראיון מועמד לחונכות – הדורשת חיפוש ועדכון מועמדים – ולאחר ביצוע שיחה טלפונית סימון שהראיון בוצע והמועמד עבר את הראיון בהצלחה או שלא. 
b.	הוספת חונך – לאחר ראיון מוצלח של מועמד חונכות – רכז חונכים יקבל משימה להוסיף חונך. הוספת חונך תסיר אותו באופן אוטומטי מהמועמדים לחונכות. לאחר מכן תופיע משימה חדשה של התאמת חניך.
 
c.	התאמת חניך – תהליך מורכב הדורש התאמה של חניך לחונך. רכז חונכים ורכזת המשפחות יוכלו לפתוח את המשימה ולבצע התאמה לפי ראות עיניהם לאחר סינון ראשוני. המשתמש יבחר את החונכים עבורם ירצה לחשב סינון ראשוני ובלחיצה על כפתור "בצע סינון", המערכת תבצע חישוב על פי קרבה גיאוגרפית (עיר מגורים ו/או עד מרחק גיאוגרפי לבחירה עד מרחק מקסימלי שיוגדר במערכת) ומין החניך והחונך ותספק רשימה של חניכים אפשריים לכל חונך שנבחר לחישוב. ביצוע המשימה יסתיים רק לאחר אישור שני הרכזים על מנת למנוע איבוד מידע ועבודה במקביל. על גבי המיקומים יופיעו פרטי חניך (שם,גיל) ולחיצה תוביל למסך המראה את כלל פרטי החניך בצורה מסודרת
 

d.	הוספת משפחה – פעולה המתבצעת על ידי רכזת רישום לאחר מילוי פרטים ראשוניים. משימה זו תופיע לרכזת הרישום לאחר שמתנדב הוסיף משפחה באופן ראשוני.
 
e.	סטטוס משפחה – משימה שתופיע לרכז משפחות בכל תחילת חודש קלנדרי, בה יידרש הרכז לפנות אל המשפחה כדי לבדוק אם יש לעדכן פרטים כלשהם או יש צורך במחיקה או הוספת בריא. משפחה שנוצרה ביממה האחרונה לפי שעון ישראל תייצר משימת סטטוס אודות המשפחה החדשה עבור רכזת משפחות. משימה זו תהיה זמינה לביצוע גם על ידי כלל הרכזים.
 
f.	עדכון משפחה – משימה לרכזת משפחות ורכזת רישום – שתבוצע על ידי מי מהן כאשר נדרש עדכון כלשהו בפרטי המשפחה. המשימה תווצר על ידי סימון מתאים בעת השלמת משימת סטטוס משפחה
 
g.	מחיקת משפחה – משימה לרכזת משפחות בלבד- סימון המשפחה כלא פעילה והעברתה לארכיון. המשימה תווצר על ידי סימון מתאים בעת השלמת משימת סטטוס משפחה
 
h.	הוספת בריא – בעת ביצוע משימת עדכון משפחה, יוכל המשתמש לציין כי הילד החולה הבריא. שמירת העדכון תייצר משימה של הוספת בריא עבור רכז משפחות.  משימה זו תתאפשר הן על ידי מעבר למסך ניהול בריאים מתוך מסך ניהול משפחות או מתוך המשימה עצמה.
 
i.	סקירת בוגר – בוגר יתווסף באופן מיידי לאחר הגיעו לגיל 16. תופיע משימה לרכז בוגרים על התווספות בוגר חדש לשם מעבר על הפרטים ועדכון במקרה הצורך. משימה זו תתאפשר הן על ידי מעבר למסך ניהול בוגרים מתוך מסך ניהול משפחות או מתוך המשימה עצמה.
 
j.	חונכות – משימה שבועית לחונך שתופיע עד לביצוע שלה עם תוקף של שבוע. חונך יוכל לסמן את ביצוע המשימה ולאחר מכן תווצר משימה של משוב.
 
k.	משוב חונכות – מיד לאחר השלמת משימת חונכות – תווצר משימה של משוב חונכות לביצוע עד 48 שעות. השלמת משימה זו תיצור משימת קריאת משוב חונך עבור רכז החונכים.
 
l.	קריאת משוב חונך – לאחר השלמת משוב על ידי חונך תווצר לרכז החונכים משימה לקריאת המשוב. תופיע משימה נפרדת עבור כל חונך.  משימה זו יכולה להתבצע באופן רוחבי על ידי הפקת דוח משובי חונכים. משימה זו תתאפשר הן על ידי מעבר למסך ניהול משובים מתוך מסך ניהול חונכים או מתוך המשימה עצמה.
 
m.	משוב מתנדב כללי – לאחר אירוע או יום כיף, רכז המתנדבים ייכנס למערכת ויצור משימת משוב לכלל המתנדבים שידוע לו שהשתתפו בהתנדבות. לאחר ביצוע משוב של מתנדב, תופיע לו משימה של קריאת משוב מתנדב.
 
n.	קריאת משוב מתנדב כללי – לאחר השלמת משוב על ידי מתנדב כללי תווצר לרכז מתנדבים משימה לקריאת המשוב. תופיע משימה נפרדת עבור כל מתנדב כללי.  משימה זו יכולה להתבצע באופן רוחבי על ידי הפקת דוח משובי מתנדבים כלליים. משימה זו תתאפשר הן על ידי מעבר למסך ניהול משובים מתוך מסך ניהול מתנדבים או מתוך המשימה עצמה.
 
o.	הפקת דוחות משוב
אחת לחודש תווצר משימה לכל רכז, להפיק דוח משובים למתנדבים תחתיו – רכז חונכים ומתנדבים כל אחד והדוח שלו. על ידי הדוח יוכלו הרכזים לזהות בעיות חוזרות וכן לראות את אחוז החונכים/מתנדבים שמילאו דוח באופן מלא (על פי כמות המילים בשדות הטקסט החופשי ועוד קריטריונים). הדוח גם יוכל לשמש כביצוע של משימות קריאת משוב יחידניות בפעימה אחת על ידי סימון של מספר חונכים לקריאת משוב – באופן כזה דוח שיופק יגרור סימון השלמה של משימות קריאת משוב מרובות עבור החונכים/מתנדבים שנבחרו. כברירת מחדל יבחרו כלל החונכים/מתנדבים. כפתור להפקת דוח יופיע גם בלוח המשימות עבור רכז חונכים ורכז מתנדבים וישופעל במקרה בו ישנן לפחות 2 משימות קריאת משוב שטרם הושלמו. תנתן האפשרות בידי מנהל מערכת לחסום השלמת משימות קריאות משוב על ידי הפקת דוח.
	 
2.	משימות הנוצרות ידנית על ידי איש צוות:
a.	עדכון מתנדב – פעולה שתתבצע על ידי רכז מתנדבים  - בעקבות רישום של מתנדב חדש או שינוי כלשהו בפרטים – משימה שתוכל להווצר על ידי המתנדב עצמו כבקשה לעדכון פרטים או על ידי רכז המתנדבים לביצוע במועד מאוחר יותר. במידה ומדובר בהשהיית מתנדב, המתנדב יסומן כ"לא פעיל" וחשבונו יושהה עד לשפעול על ידי רכז מתנדבים.
 
b.	עדכון חונך - פעולה שתתבצע על ידי רכז חונכים  - שינוי כלשהו בפרטים – משימה שתוכל להווצר על ידי החונך עצמו כבקשה לעדכון פרטים או על ידי רכז החונכים לביצוע במועד מאוחר יותר. במידה ומדובר בהשהיית מתנדב, החונך יסומן כ"לא פעיל" וחשבונו יושהה עד לשפעול על ידי רכז חונכים.
 
c.	עדכון בוגר  - משימה שרכז בוגרים יכול ליצור לעצמו לביצוע במועד מאוחר יותר.
 
d.	עדכון בריא – משימה שרכז משפחות / רכז חונכים יכולים ליצור לביצוע במועד מאוחר יותר.
 
3.	משימות לביצוע ללא שימוש בלוח המשימות
a.	הקמת משפחה – משימה למתנדבים בלבד - הוספה של שם משפחה וטלפון על ידי מתנדב – תתבצע ללא הוספה ללוח המשימות.
b.	רישום מתנדב – כניסה ללא סיסמה על ידי קישור למערכת כדי ליצור משתמש ראשוני לשם רישום לעמותה – משתמשים שאינם רשומים יקימו את עצמם במערכת על ידי משימה זו.
ביצוע משימה זו תגרור יצירה אוטומטית של משימת ראיון מועמד לחונכות או עדכון מתנדב בהתאם עבור הרכז הרלוונטי.

5.7.4.	 ניהול משפחות
טבלה המציגה משפחות ופרטיהם לבעלי הרשאה מתאימה. כברירת מחדל יוצגו עמודות מסויימות לפי צרכי העמותה. ניתן להוסיף עמודות נוספות להצגה. תופענה אפשרויות חיפוש וסינון לפי עמודות מוצגות. לחיצה על משפחה תציג את כלל פרטיה. משפחות המסומנות כ"לא פעילות" לא תופענה במסך ניהול משפחות כברירת מחדל. כפתור "הצג משפחות שעזבו" יציג את כלל המשפחות כולל משפחות שעזבו את העמותה. יופיע כפתור למעבר למסכים "ניהול בוגרים" (ראה 5.7.7) ו"ניהול בריאים" (ראה 5.7.8). המשתמש יוכל לערוך ולמחוק משפחות מתוך מסך ניהול משפחות על ידי כפתור "עדכן משפחה" שישופעל לאחר סימון של משפחה בטבלה וכן למחוק על ידי "עזיבת משפחה" שיתנהג באותו אופן. כמו כן, כפתור בצורת עיפרון וכפתור בצורת סל אשפה יופיעו על גבי המסך הנפתח להצגת כלל הפרטים של המשפחה.
 
5.7.5.	ניהול חונכים
טבלה המציגה את כלל המתנדבים בעמותה העוסקים בחונכות באופן פעיל או ממתינים לראיון ופרטיהם לבעלי הרשאה מתאימה. כברירת מחדל יוצגו עמודות מסויימות לפי צרכי העמותה. ניתן להוסיף עמודות נוספות להצגה. תופענה אפשרויות חיפוש וסינון לפי עמודות מוצגות. לחיצה על חונך תציג את כלל פרטיו. חונכים המסומנים כ"לא פעילים" לא יופיעו במסך כברירת מחדל. כפתור "הצג חונכים שעזבו" יציג את כלל החונכים כולל חונכים שעזבו את העמותה – אך לא חונכים שהפסיקו לחנוך ועברו למתנדבים כלליים. יופיע כפתור למעבר למסכים "ניהול חונכויות" (ראה 5.7.10) ו"ניהול משובי חונכים". המשתמש יוכל לערוך ולמחוק חונכים מתוך מסך ניהול חונכים על ידי כפתור "עדכן חונך" שישופעל לאחר סימון של חונך בטבלה וכן למחוק על ידי "עזיבת חונך" שיתנהג באותו אופן. כמו כן, כפתור בצורת עיפרון וכפתור בצורת סל אשפה יופיעו על גבי המסך הנפתח להצגת כלל הפרטים של החונך. לכל חונך יוצג מצב החונכות שלו בעמודה מתאימה.
 
5.7.6.	ניהול מתנדבים
טבלה המציגה את כלל המתנדבים בעמותה שלא עוסקים בחונכות בשום אופן ופרטיהם לבעלי הרשאה מתאימה. כברירת מחדל יוצגו עמודות מסויימות לפי צרכי העמותה. ניתן להוסיף עמודות נוספות להצגה. תופענה אפשרויות חיפוש וסינון לפי עמודות מוצגות. לחיצה על  מתנדב תציג את כלל פרטיו. מתנדבים המסומנים כ"לא פעילים" לא יופיעו במסך כברירת מחדל. כפתור "הצג מתנדבים שעזבו" יציג את כלל המתנדבים הכלליים כולל אלו שעזבו את העמותה – אך לא חונכים. יופיע כפתור למעבר למסכים "ניהול התנדבות כללית" (לא יפותח בשלב זה של הפרוייקט) ו"ניהול משובי מתנדבים כלליים". המשתמש יוכל לערוך ולמחוק מתנדבים מתוך מסך ניהול מתנדבים על ידי כפתור "עדכן מתנדב" שישופעל לאחר סימון של מתנדב בטבלה וכן למחוק על ידי "עזיבת מתנדב" שיתנהג באותו אופן. כמו כן, כפתור בצורת עיפרון וכפתור בצורת סל אשפה יופיעו על גבי המסך הנפתח להצגת כלל הפרטים של המתנדב.

 
5.7.7.	ניהול בוגרים
טבלה המציגה את כלל הבוגרים בעמותה שעברו את גיל 16. כברירת מחדל יוצגו עמודות מסויימות לפי צרכי העמותה. ניתן להוסיף עמודות נוספות להצגה. תופענה אפשרויות חיפוש וסינון לפי עמודות מוצגות. לחיצה על בוגר תציג את כלל פרטיו.  במסך זה יוצגו רק בוגרים פעילים. בוגרים המסומנים כ"לא פעילים" לא יופיעו במסך. יופיע כפתור למעבר למסך "ניהול משפחות" (ראה 5.7.4). המשתמש יוכל לערוך פרטי בוגרים על ידי כפתור "עדכן בוגר" שישופעל לאחר סימון של בוגר בטבלה.כמו כן, כפתור בצורת עיפרון יופיע על גבי המסך הנפתח להצגת כלל הפרטים של הבוגר. לא תתאפשר מחיקה של בוגר. מחיקה תתבצע אך ורק במסך ניהול משפחות ותוצג הודעה מתאימה על כך.
 
5.7.8.	ניהול בריאים
טבלה המציגה את כלל הבריאים בעמותה. כברירת מחדל יוצגו עמודות מסויימות לפי צרכי העמותה. ניתן להוסיף עמודות נוספות להצגה. תופענה אפשרויות חיפוש וסינון לפי עמודות מוצגות. לחיצה על בוגר תציג את כלל פרטיו.  במסך זה יוצגו רק בריאים פעילים. בריאים המסומנים כ"לא פעילים" לא יופיעו במסך. יופיע כפתור למעבר למסך "ניהול משפחות" (ראה 5.7.4). המשתמש יוכל לערוך פרטי בריאים על ידי כפתור "עדכן בריא" שישופעל לאחר סימון של בריא בטבלה.כמו כן, כפתור בצורת עיפרון יופיע על גבי המסך הנפתח להצגת כלל הפרטים של הבריא. לא תתאפשר מחיקה של בריא. מחיקה תתבצע אך ורק במסך ניהול משפחות ותוצג הודעה מתאימה על כך. תופיע אפשרות להוסיף בריא לטבלה. לחיצה על כפתור "הוסף בריאים" תציג רשימה חלקית של המשפחות (שם,טלפון) להוספה למסך ניהול הבריאים. תנתו אפשרות להוסיף בריא אחד או יותר בפעולה אחת.
 
5.7.9.	ניהול משובים
טבלה המציגה את כלל המשובים ומציגה לפי הרשאות מתאימות את המשובים הרלוונטיים – רכז חונכים יראה רק משובים של חונכים ורכז מתנדבים רק משובי מתנדבים כלליים.
הטבלה תכיל שם המשיב, פרטים נוספים לפי בחירה והמשוב אותו הזין. במסך תופענה אפשרויות חיפוש וסינון. כפתור "סקור משוב" יופיע ליד כל משוב שטרם נסקר. משוב שנסקר יופיע עם סימון מתאים תחת עמודת "סקירת משוב" המציין סיקור שבוצע.
יופיע כפתור מתאים אשר לחיצה עליו תוביל למסך ניהול סוג המתנדבים המתאים לפי הרשאה.
 
5.7.10.	ניהול חונכויות
טבלה שתציג את כלל החניכים אשר מקיימים פעם בשבוע חונכות. במסך זה יוצג כפתור התאמת חונכות להוספה של חונכויות במסך עבור חונכים שטרם שובצו להם חניכים. לאחר התאמה מוצלחת תתוסף שורה למסך המציגה את החונכות החדשה. חונכות תוכל להווצר על ידי מרחק גיאוגרפי אותו תחשב המערכת לפי דרישה, עבור מינים זהים לחניך ולחונך כפי דרישת העמותה. פירוט יתר של משימה זו ראה לעיל ב5.7.3 משימה c1
 
5.7.11.	הפקת דוחות
מסך דוחות יאפשר הפקה של מספר דוחות שונים המפורטים להלן
 
5.7.11.1.	דוח משובי מתנדבים
דוח המכיל את כלל משובי המתנדבים לפי הסוג המתאים. יוצג שם המתנדב/חונך, תאריך המשוב ותוכנו. הדוח יוכל להיות מיוצא לקובץ אקסל או PDF. (בהמשך תהיה אפשרות לשליחה ישירה במייל מהמערכת למשתמשים רשומים בעלי הרשאה מתאימה)
 
5.7.11.2.	דוח התפלגות חונכים המצוותים למשפחה
דוח המכיל את כלל החונכים הפעילים. יוצג שם החונך, ושם החניך. הדוח יוכל להיות מיוצא לקובץ אקסל או PDF. (בהמשך תהיה אפשרות לשליחה ישירה במייל מהמערכת למשתמשים רשומים בעלי הרשאה מתאימה)
 
5.7.11.3.	דוח משפחות ללא חונכים הרוצות בכך
דוח המכיל את כלל המשפחות הממתינות לחונכות. יוצג שם הילד, ומספרי טלפון של ההורים. הדוח יוכל להיות מיוצא לקובץ אקסל או PDF. (בהמשך תהיה אפשרות לשליחה ישירה במייל מהמערכת למשתמשים רשומים בעלי הרשאה מתאימה)

 
5.7.11.4.	דוח משפחות שעזבו
דוח המכיל את כלל המשפחות שעזבו. יוצג שם הילד, מספרי הטלפון של ההורים, תאריך העזיבה,שם המעזיב וסיבת העזיבה (החלמה/פטירה ל"ע). הדוח יוכל להיות מיוצא לקובץ אקסל או PDF. (בהמשך תהיה אפשרות לשליחה ישירה במייל מהמערכת למשתמשים רשומים בעלי הרשאה מתאימה)
 
5.7.11.5.	דוח משפחות חדשות בחודש אחרון
דוח המכיל את כלל המשפחות שהצטרפו בחודש האחרון. יוצג שם הילד, מספרי הטלפון של ההורים, תאריך ההצטרפות. הדוח יוכל להיות מיוצא לקובץ אקסל או PDF. (בהמשך תהיה אפשרות לשליחה ישירה במייל מהמערכת למשתמשים רשומים בעלי הרשאה מתאימה)
 
5.7.11.6.	התפלגות משפחות לפי ערים בארץ
דוח המכיל את התפלגות המשפחות לפי ערים בארץ. יוצגו שם העיר ושם המלא של הילד בטבלה. כמו כן תוצג מפה עם ריכוז משפחות לפי עיר. הדוח יוכל להיות מיוצא לקובץ אקסל או PDF או ייצוא מפה כתמונה. (בהמשך תהיה אפשרות לשליחה ישירה במייל מהמערכת למשתמשים רשומים בעלי הרשאה מתאימה)
 
5.7.11.7.	דוח התאמת חונכות פוטנציאלית
דוח המציג התאמות אפשריות בין חונך לחניכים. יוצגו שם החונך הממתין לחונכות, שם החניך, מין החניך והחונך, שם העיר של החונך,שם העיר של החניך, המרחק בין הערים. התאמה תופיע בדוח אם ישנו מרחק של עד 15 קמ בין הערים. הדוח יוכל להיות מיוצא לקובץ אקסל או PDF (בהמשך תהיה אפשרות לשליחה ישירה במייל מהמערכת למשתמשים רשומים בעלי הרשאה מתאימה)
 
6.	ניתוח המערכת
6.1.	ניתוח פונקציונלי
6.1.1.	מילון נתונים
המילון מפרט את מאגרי המידע שיוקמו עבור המערכת, ואת הישויות החיצוניות שישתמשו בה. 
ישויות
1U 	מנהל מערכת
2U	רכז טכני
3U	רכז מתנדבים
4U 	רכז חונכים
5U	רכז משפחות
6U	רכז בוגרים
7U	חונך
8U	מתנדב כללי
מאגרי מידע
1D	ילדים
2D	נרשמים
3D	מתנדבים כלליים
4D	מועמדים לחונכות
5D	חונכים
6D	חונכויות
7D	בוגרים
8D	בריאים
9D	משוב חונכים
10D	משוב מתנדבים
11D	סגל
12D	הרשאות
13D	משימות
6.1.2.	תרשימי DFD לניתוח פונקציונלי של המערכת
 
תרשים קשרי גומלין לניתוח בסיס הנתונים שיוקם במערכת  
6.2.	


Sure, let's organize the permissions for each role and map them to the relevant tables. This will help ensure we have a clear understanding of what each role can do and which tables they need access to.

### Roles and Permissions

#### 1. Technical Coordinator
- **Resource**: Family
  - **Action**: CREATE, UPDATE, DELETE, VIEW
  - **Tables**: `signedup`, `general_volunteer`, `pending_tutor`, `tutors`, `children`, `tutorships`, `matures`, `healthy`
- **Resource**: Volunteer
  - **Action**: VIEW
  - **Tables**: `general_volunteer`
- **Resource**: Tutor
  - **Action**: VIEW
  - **Tables**: `tutors`

#### 2. Volunteer Coordinator
- **Resource**: Volunteer
  - **Action**: CREATE, UPDATE, VIEW
  - **Tables**: `general_volunteer`
- **Resource**: Family
  - **Action**: UPDATE, DELETE, VIEW
  - **Tables**: `signedup`, `general_volunteer`, `pending_tutor`, `tutors`, `children`, `tutorships`, `matures`, `healthy`

#### 3. Families Coordinator
- **Resource**: Family
  - **Action**: UPDATE, DELETE, VIEW
  - **Tables**: `signedup`, `general_volunteer`, `pending_tutor`, `tutors`, `children`, `tutorships`, `matures`, `healthy`

#### 4. Tutors Coordinator
- **Resource**: Tutor
  - **Action**: CREATE, UPDATE, VIEW
  - **Tables**: `tutors`
- **Resource**: Family
  - **Action**: UPDATE, DELETE, VIEW
  - **Tables**: `signedup`, `general_volunteer`, `pending_tutor`, `tutors`, `children`, `tutorships`, `matures`, `healthy`

#### 5. Matures Coordinator
- **Resource**: Mature
  - **Action**: CREATE, UPDATE, VIEW
  - **Tables**: `matures`
- **Resource**: Family
  - **Action**: UPDATE, DELETE, VIEW
  - **Tables**: `signedup`, `general_volunteer`, `pending_tutor`, `tutors`, `children`, `tutorships`, `matures`, `healthy`

#### 6. Healthy Kids Coordinator
- **Resource**: Healthy
  - **Action**: CREATE, UPDATE, VIEW
  - **Tables**: `healthy`
- **Resource**: Family
  - **Action**: UPDATE, DELETE, VIEW
  - **Tables**: `signedup`, `general_volunteer`, `pending_tutor`, `tutors`, `children`, `tutorships`, `matures`, `healthy`

#### 7. System Administrator
- **Resource**: User
  - **Action**: CREATE, UPDATE, DELETE
  - **Tables**: `staff`
- **Resource**: Role
  - **Action**: MANAGE
  - **Tables**: `role`
- **Resource**: Permission
  - **Action**: MANAGE
  - **Tables**: `permissions`
- **Resource**: Family
  - **Action**: CREATE, UPDATE, DELETE
  - **Tables**: `signedup`, `general_volunteer`, `pending_tutor`, `tutors`, `children`, `tutorships`, `matures`, `healthy`
- **Resource**: Volunteer
  - **Action**: CREATE, UPDATE, DELETE
  - **Tables**: `general_volunteer`
- **Resource**: Tutor
  - **Action**: CREATE, UPDATE, DELETE
  - **Tables**: `tutors`
- **Resource**: Mature
  - **Action**: CREATE, UPDATE, DELETE
  - **Tables**: `matures`

#### 8. Volunteer
- **Resource**: Family
  - **Action**: VIEW
  - **Tables**: `signedup`, `general_volunteer`, `pending_tutor`, `tutors`, `children`, `tutorships`, `matures`, `healthy`
- **Resource**: Volunteer
  - **Action**: VIEW
  - **Tables**: `general_volunteer`

#### 9. Tutor
- **Resource**: Family
  - **Action**: VIEW
  - **Tables**: `signedup`, `general_volunteer`, `pending_tutor`, `tutors`, `children`, `tutorships`, `matures`, `healthy`
- **Resource**: Tutor
  - **Action**: VIEW
  - **Tables**: `tutors`

### Summary Table

| Role                  | Resource | Action                | Relevant Tables                                                                 |
|-----------------------|----------|-----------------------|---------------------------------------------------------------------------------|
| Technical Coordinator | Family   | CREATE, UPDATE, DELETE, VIEW | `signedup`, `general_volunteer`, `pending_tutor`, `tutors`, `children`, `tutorships`, `matures`, `healthy` |
| Technical Coordinator | Volunteer| VIEW                  | `general_volunteer`                                                             |
| Technical Coordinator | Tutor    | VIEW                  | `tutors`                                                                        |
| Volunteer Coordinator | Volunteer| CREATE, UPDATE, VIEW  | `general_volunteer`                                                             |
| Volunteer Coordinator | Family   | UPDATE, DELETE, VIEW  | `signedup`, `general_volunteer`, `pending_tutor`, `tutors`, `children`, `tutorships`, `matures`, `healthy` |
| Families Coordinator  | Family   | UPDATE, DELETE, VIEW  | `signedup`, `general_volunteer`, `pending_tutor`, `tutors`, `children`, `tutorships`, `matures`, `healthy` |
| Tutors Coordinator    | Tutor    | CREATE, UPDATE, VIEW  | `tutors`                                                                        |
| Tutors Coordinator    | Family   | UPDATE, DELETE, VIEW  | `signedup`, `general_volunteer`, `pending_tutor`, `tutors`, `children`, `tutorships`, `matures`, `healthy` |
| Matures Coordinator   | Mature   | CREATE, UPDATE, VIEW  | `matures`                                                                       |
| Matures Coordinator   | Family   | UPDATE, DELETE, VIEW  | `signedup`, `general_volunteer`, `pending_tutor`, `tutors`, `children`, `tutorships`, `matures`, `healthy` |
| Healthy Kids Coordinator | Healthy | CREATE, UPDATE, VIEW | `healthy`                                                                       |
| Healthy Kids Coordinator | Family | UPDATE, DELETE, VIEW  | `signedup`, `general_volunteer`, `pending_tutor`, `tutors`, `children`, `tutorships`, `matures`, `healthy` |
| System Administrator  | User     | CREATE, UPDATE, DELETE| `staff`                                                                         |
| System Administrator  | Role     | MANAGE                | `role`                                                                          |
| System Administrator  | Permission | MANAGE              | `permissions`                                                                   |
| System Administrator  | Family   | CREATE, UPDATE, DELETE| `signedup`, `general_volunteer`, `pending_tutor`, `tutors`, `children`, `tutorships`, `matures`, `healthy` |
| System Administrator  | Volunteer| CREATE, UPDATE, DELETE| `general_volunteer`                                                             |
| System Administrator  | Tutor    | CREATE, UPDATE, DELETE| `tutors`                                                                        |
| System Administrator  | Mature   | CREATE, UPDATE, DELETE| `matures`                                                                       |
| Volunteer             | Family   | VIEW                  | `signedup`, `general_volunteer`, `pending_tutor`, `tutors`, `children`, `tutorships`, `matures`, `healthy` |
| Volunteer             | Volunteer| VIEW                  | `general_volunteer`                                                             |
| Tutor                 | Family   | VIEW                  | `signedup`, `general_volunteer`, `pending_tutor`, `tutors`, `children`, `tutorships`, `matures`, `healthy` |
| Tutor                 | Tutor    | VIEW                  | `tutors`                                                                        |

This should give you a clear overview of the permissions for each role and the relevant tables they need access to. Let me know if you need any further adjustments or details! 😊




System Administrator
General Volunteer
Tutor
Technical Coordinator
Volunteer Coordinator
Families Coordinator
Tutors Coordinator
Matures Coordinator
Healthy Kids Coordinator

